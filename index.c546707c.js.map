{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCAA,I,EAAM,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAe,SAAS,gBAAgB,CAAC,U,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAEzC,EAAc,EAAS,MAAM,CACjC,SAAC,CADH,EACe,MAAA,AAAsB,eAAtB,EAAQ,SAAS,A,GAE1B,EAAQ,EAAS,MAAM,CAC3B,SAAC,CADH,EACe,MAAA,AAAsB,qBAAtB,EAAQ,SAAS,AAC/B,EAAA,CAAC,EAAE,CACE,EAAU,EAAS,MAAM,CAC7B,SAAC,CADH,EACe,MAAA,AAAsB,uBAAtB,EAAQ,SAAS,AAC/B,EAAA,CAAC,EAAE,CAEE,EAAc,EACjB,GAAG,CAAC,SAAC,CADR,EACoB,OAAA,EAAQ,WAAW,CAAC,OAAO,CAAC,KAAM,GACnD,GAAA,MAAM,CAAC,SAAC,CAAA,CAAG,CAAX,EAAiB,OAAA,OAAO,UAAU,CAAC,GAAK,OAAO,UAAU,CAAC,EAAI,EAAA,GAE3D,EAAiB,EAAY,cAAc,GAC3C,EAAmB,AAAC,CAAA,EAAc,EAAY,MAAK,AAAL,EAAQ,cAAc,EAE1E,CAAA,EAAM,WAAW,CAAG,EACpB,EAAQ,WAAW,CAAG","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar allItems = _to_consumable_array(document.querySelectorAll(\"span\"));\nvar populations = allItems.filter(function(element) {\n    return element.className === \"population\";\n});\nvar total = allItems.filter(function(element) {\n    return element.className === \"total-population\";\n})[0];\nvar average = allItems.filter(function(element) {\n    return element.className === \"average-population\";\n})[0];\nvar totalResult = populations.map(function(element) {\n    return element.textContent.replace(/,/g, \"\");\n}).reduce(function(a, b) {\n    return Number.parseFloat(a) + Number.parseFloat(b);\n}, 0);\nvar formattedTotal = totalResult.toLocaleString();\nvar formattedAverage = (totalResult / populations.length).toLocaleString();\ntotal.textContent = formattedTotal;\naverage.textContent = formattedAverage;\n\n//# sourceMappingURL=index.c546707c.js.map\n","const allItems = [...document.querySelectorAll('span')];\n\nconst populations = allItems.filter(\n  (element) => element.className === 'population',\n);\nconst total = allItems.filter(\n  (element) => element.className === 'total-population',\n)[0];\nconst average = allItems.filter(\n  (element) => element.className === 'average-population',\n)[0];\n\nconst totalResult = populations\n  .map((element) => element.textContent.replace(/,/g, ''))\n  .reduce((a, b) => Number.parseFloat(a) + Number.parseFloat(b), 0);\n\nconst formattedTotal = totalResult.toLocaleString();\nconst formattedAverage = (totalResult / populations.length).toLocaleString();\n\ntotal.textContent = formattedTotal;\naverage.textContent = formattedAverage;\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","allItems","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","populations","filter","element","className","total","average","totalResult","map","textContent","replace","reduce","a","b","Number","parseFloat","formattedTotal","toLocaleString","formattedAverage"],"version":3,"file":"index.c546707c.js.map"}